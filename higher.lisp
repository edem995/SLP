;;; Задание 2
;;; Сенанов
;;; Определите функционал (MAPLIST fn список) для одного списочного аргумента
(defun tails (func lst)
  (cond ((null lst) nil)
   (t (cons (funcall func lst) (tails func (cdr lst))))))
 
(tails (lambda (x) (apply '+ x)) '(1 2 3 4 5 6 7 8 9))
;;;  (45 44 42 39 35 30 24 17 9)
(tails (lambda (x) (cons 'A x)) '(1 2 3 4 5))
;;;  ((A 1 2 3 4 5) (A 2 3 4 5) (A 3 4 5) (A 4 5) (A 5)


;;;	-------------------------------------------------------------


;;; Задание 4
;;; Сенанов
;;; определите функциональный предикат (КАЖДЫЙ пред список), который истенен в том и только в том случае,когда,являющийся
;;; функциональным аргументом предикат пред истинен для всех элементов списка список.
(defun Каждый (func lst)
   (null (mapcan #'(lambda (x) (if (funcall func x) nil (list t))) lst)))
;;;
(Каждый 'oddp '(1 2 3 4 5 6 7))
;;; NIL
(Каждый 'oddp '(1 3 5 7))
;;; T
(Каждый (lambda (x) (= x 0)) '(1 2 3 4 5))
;;; NIl
(Каждый (lambda (x) (= x 0)) '(0 0 0 0 0))
;;; T


;;;	-------------------------------------------------------------


;;; Задание 6
;;; Сенанов
;;; Определите фильтр (УДАЛИТЬ-ЕСЛИ пред список), удаляющий из списка список все элементы, которые не обладают свойством, 
;;; наличие которого проверяет предикат пред.
(defun УдалитьЕсли (func lst)
 (mapcan #'(lambda (x) (if (funcall func x) nil (list x))) lst))
 
(УдалитьЕсли #'evenp '(1 2 3 4 5 6 7))
;;; (1 3 5 7)
(УдалитьЕсли #'oddp '(1 2 3 4 5 6 7))
;;; (2 4 6)
